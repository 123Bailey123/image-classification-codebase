include "base.conf"

max_epochs: 90

memory_format: "channels_last" # select from 'contiguous_format' | 'channels_last' | 'preserve_format'

use_amp: true # if true, it will train in automatic mixed precision mode

data {
    type_: imagenet2012

    image_size: 224
    num_classes: 1000

    root: data/imagenet2012-tfrec

    mean: [0.485, 0.456, 0.406]
    std: [0.229, 0.224, 0.225]

    batch_size: 256
    num_workers: 8

    use_dali: true # if ture, use NVIDIA DALI to preprocess the images instead of torchvision
    use_tfrecord: true # if ture, use tfrecord format to load images instead of loading from image folder

}

model {
    type_: resnet50
    pretrained: false
    load_from: null
}

optimizer {
    type_: CustomSGD
    lr: 0.256
    basic_bs: 256 # we set lr=0.256 for 256 batch size, for other batch sizes we linearly scale the learning rate.
    momentum: 0.875
    dampening: 0
    weight_decay: 3.0517578125e-05 # refer to https://github.com/NVIDIA/DeepLearningExamples/tree/master/PyTorch/Classification/ConvNets/resnet50v1.5
    nesterov: false
    bn_weight_decay: 0
}

scheduler {
    type_: WarmupCosineAnnealingLR
    T_warmup: 5
    T_max: ${max_epochs}
    eta_min: 0
}

criterion {
    type_: LabelSmoothCrossEntropyLoss
    num_classes: ${data.num_classes}
    epsilon: 0.1
}
